Import module:
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test matrix_divided function:

>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

>>> matrix_divided([[1, 2], [3, 4], [5, 6]], 3)
[[0.33, 0.67], [1.0, 1.33], [1.67, 2.0]]

>>> matrix_divided([[1.5, 2.5, 3.5], [4.5, 5.5, 6.5]], 0.5)
[[3.0, 5.0, 7.0], [9.0, 11.0, 13.0]]

Test cases for TypeError:

Matrix is not a list of lists:
>>> matrix_divided("not_a_matrix", 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Elements in the matrix are not integers or floats:
>>> matrix_divided([[1, 'a', 3], [4, 5, 6], [7, 8, 9]], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Each row of the matrix must have the same size:
>>> matrix_divided([[1, 2, 3], [4, 5], [7, 8, 9]], 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

div is not a number:
>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], "not_a_number")
Traceback (most recent call last):
    ...
TypeError: div must be a number

div is equal to 0:
>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
